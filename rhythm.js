async function RhythmFunc() {
  var b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12;
  document.getElementById("audioHahaha").play(); // Play music

  await sleep(2900);
  b1 = openWindow('assets/faceWhite.html', percToN(50, screenWidth), percToN(50, screenHeight));
  await sleep(236);
  b2 = openWindow('assets/faceWhite.html', percToN(0, screenWidth), percToN(100, screenHeight));
  await sleep(370);
  b3 = openWindow('assets/faceWhite.html', percToN(100, screenWidth), percToN(0, screenHeight));
  await sleep(355);
  b4 = openWindow('assets/faceWhite.html', percToN(0, screenWidth), percToN(0, screenHeight));
  await sleep(429);
  b5 = openWindow('assets/faceWhite.html', percToN(100, screenWidth), percToN(100, screenHeight));
  await sleep(300);
  b5.close();
  await sleep(310);
  b4.close();
  await sleep(321);
  b3.close();
  await sleep(279);
  b2.close();
  await sleep(79);
  b1.close();
  b1 = openWindow('assets/faceWhite.html', percToN(50, screenWidth) - 50, percToN(50, screenHeight) - 50, 300, 300);
  await sleep(361);
  b1.close();
  b1 = openWindow('assets/faceWhite.html', percToN(50, screenWidth) - 100, percToN(50, screenHeight) - 100, 400, 400);
  await sleep(360);
  b1.close();
  b1 = openWindow('assets/faceBlack.html', percToN(50, screenWidth) - 50, percToN(50, screenHeight) - 50, 300, 300);
  await sleep(317);
  b1.close();
  b1 = openWindow('assets/faceBlack.html', percToN(50, screenWidth) - 100, percToN(50, screenHeight) - 100, 400, 400);
  await sleep(426);
  b1.close();
  b1 = openWindow('assets/faceWhite.html', percToN(50, screenWidth) - 50, percToN(50, screenHeight) - 50, 300, 300);
  await sleep(330);
  b1.close();
  b1 = openWindow('assets/faceWhite.html', percToN(50, screenWidth) - 100, percToN(50, screenHeight) - 100, 400, 400);
  await sleep(331);
  b1.close();
  b1 = openWindow('assets/faceWhite.html', percToN(50, screenWidth) - 50, percToN(50, screenHeight) - 50, 300, 300);
  await sleep(148);
  b1.close();
  b1 = openWindow('assets/faceWhite.html', percToN(10, screenWidth), percToN(15, screenHeight));
  await sleep(48);
  b2  = openWindow('assets/faceWhite.html', percToN(30, screenWidth), percToN(15, screenHeight), 216, 216);
  await sleep(47);
  b3 = openWindow('assets/faceWhite.html', percToN(50, screenWidth), percToN(15, screenHeight), 240, 240);
  await sleep(88);
  b4 = openWindow('assets/faceWhite.html', percToN(70, screenWidth), percToN(15, screenHeight), 260, 260);
  await sleep(47);
  b5 = openWindow('assets/faceWhite.html', percToN(90, screenWidth), percToN(27, screenHeight), 280, 280);
  await sleep(53);
  b6 = openWindow('assets/faceWhite.html', percToN(60, screenWidth), percToN(43, screenHeight), 300, 300);
  await sleep(40);
  b7 = openWindow('assets/faceWhite.html', percToN(40, screenWidth), percToN(71, screenHeight), 316, 316);
  await sleep(41);
  b8 = openWindow('assets/faceWhite.html', percToN(0, screenWidth), percToN(100, screenHeight), 332, 332);
  await sleep(44);
  b9 = openWindow('assets/faceWhite.html', percToN(20, screenWidth), percToN(50, screenHeight), 348, 348);
  await sleep(51);
  b10 = openWindow('assets/faceWhite.html', percToN(30, screenWidth), percToN(8,  screenHeight), 364, 364);
  await sleep(80);
  b11 = openWindow('assets/faceWhite.html', percToN(50, screenWidth), percToN(5,  screenHeight), 380, 380);
  await sleep(19);
  b12 = openWindow('assets/faceWhite.html', percToN(25, screenWidth), percToN(12, screenHeight), 400, 400);
  await sleep(340);
  b12.close();
  await sleep(336);
  b11.close();
  await sleep(326);
  b10.close();
  await sleep(311);
  b9.close();
  await sleep(334);
  b8.close();
  await sleep(362);
  b7.close();
  await sleep(323);
  b6.close();
  await sleep(193);
  b5.close();
  await sleep(168);
  b4.close();
  await sleep(96);
  b3.postMessage([percToN(25, screenWidth), percToN(50, screenHeight), 1500], '*');
  b2.postMessage([percToN(50, screenWidth), percToN(50, screenHeight), 1500], '*');
  b1.postMessage([percToN(75, screenWidth), percToN(50, screenHeight), 1500], '*');
}

var lastSleep = 0;
function sleep(ms) {
  if (lastSleep == 0) lastSleep = Date.now();
  return new Promise(resolve => setTimeout(() => { lastSleep += ms; resolve(); }, Math.max(lastSleep + ms - Date.now(), 0)));
}
